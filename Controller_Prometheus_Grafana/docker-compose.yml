version: '3.8'

networks:
  monitoring_net: # Simplified network for this stack
    name: monitoring_net
    driver: bridge

volumes:
  grafana_data:
    name: grafana_data
  prometheus_data:
    name: prometheus_data
  alertmanager_data:
    name: alertmanager_data
  pushgateway_data:
    name: pushgateway_data

services:
  prometheus:
    image: prom/prometheus:v2.47.1
    restart: unless-stopped # Default restart policy
    container_name: prometheus # Corrected container name
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus:/etc/prometheus # Mount local prometheus config
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --storage.tsdb.retention.time=30d
      - --storage.tsdb.retention.size=150GB # Consider adjusting based on controller's disk
      - --web.enable-lifecycle
      - --web.listen-address=:9090
    ports:
      - "9090:9090" # Expose Prometheus on host port 9090
    networks:
      - monitoring_net
    logging:
      driver: loki
      options:
        loki-url: "http://192.168.56.13:3100/loki/api/v1/push" # Send logs to Loki on worker3
        loki-external-labels: "container_name={{.Name}},job=monitoring_stack"

  grafana:
    image: grafana/grafana:10.1.5
    restart: unless-stopped
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/ # Mount local grafana provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USERNAME:-admin} # Default admin user if not set
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin} # Default admin password if not set
      - GF_INSTALL_PLUGINS=${GRAFANA_INSTALL_PLUGINS}
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_PATHS_DATA=/var/lib/grafana
      - GF_SERVER_HTTP_PORT=3000
    ports:
      - "3000:3000" # Expose Grafana on host port 3000
    networks:
      - monitoring_net
    logging:
      driver: loki
      options:
        loki-url: "http://192.168.56.13:3100/loki/api/v1/push"
        loki-external-labels: "container_name={{.Name}},job=monitoring_stack"

  alertmanager:
    image: prom/alertmanager:v0.26.0
    restart: unless-stopped
    container_name: alertmanager
    volumes:
      - alertmanager_data:/alertmanager
      - ./alertmanager:/etc/alertmanager # Mount local alertmanager config
    command:
      - --config.file=/etc/alertmanager/alertmanager.yml
      - --storage.path=/alertmanager
      - --web.listen-address=:9093
    ports:
      - "9093:9093" # Expose Alertmanager
    networks:
      - monitoring_net
    logging:
      driver: loki
      options:
        loki-url: "http://192.168.56.13:3100/loki/api/v1/push"
        loki-external-labels: "container_name={{.Name}},job=monitoring_stack"

  pushgateway:
    image: prom/pushgateway:v1.6.2
    restart: unless-stopped
    container_name: pushgateway
    command:
      - --persistence.file=/data/pushgateway.store # Changed path to be inside volume
      - --persistence.interval=1m
      - --web.listen-address=:9091
    volumes:
      - pushgateway_data:/data # Mount volume to /data
    ports:
      - "9091:9091" # Expose Pushgateway
    networks:
      - monitoring_net
    logging:
      driver: loki
      options:
        loki-url: "http://192.168.56.13:3100/loki/api/v1/push"
        loki-external-labels: "container_name={{.Name}},job=monitoring_stack"

  # --- Exporters running on the Controller node ---
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2 # Using official gcr.io image
    command:
      - --port=8080 # Default port
      # Add other flags as needed, e.g. --disable_metrics=disk,udp,percpu
    restart: unless-stopped
    container_name: cadvisor
    # ports: # Not exposing by default, Prometheus scrapes it internally
    #  - "8081:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - monitoring_net
    logging:
      driver: loki
      options:
        loki-url: "http://192.168.56.13:3100/loki/api/v1/push"
        loki-external-labels: "container_name={{.Name}},job=monitoring_stack"

  blackbox-exporter:
    image: prom/blackbox-exporter:v0.24.0
    restart: unless-stopped
    container_name: blackbox-exporter
    command:
      - '--config.file=/etc/blackboxexporter/blackbox.yml' # Corrected path
    volumes:
      - ./blackbox:/etc/blackboxexporter # Mount local blackbox config
    # ports: # Not exposing by default
    #  - "9115:9115"
    networks:
      - monitoring_net
    logging:
      driver: loki
      options:
        loki-url: "http://192.168.56.13:3100/loki/api/v1/push"
        loki-external-labels: "container_name={{.Name}},job=monitoring_stack"

  node-exporter: # This monitors the controller node itself
    image: prom/node-exporter:v1.6.1
    restart: unless-stopped
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)'
    # ports: # Not exposing by default
    #  - "9100:9100"
    networks:
      - monitoring_net
    logging:
      driver: loki
      options:
        loki-url: "http://192.168.56.13:3100/loki/api/v1/push"
        loki-external-labels: "container_name={{.Name}},job=monitoring_stack"
